# mutate(nn = fct_reorder(nn, ))
ggplot(aes(x = lubridate::year(start_date), y = distance, fill = nn)) +
geom_col() +
expand_limits(y = 0) +
scale_x_continuous(breaks = scales::breaks_pretty(n = 12))
tdf_winners %>%
mutate(nn = fct_lump_n(nationality, 5)) %>%
# mutate(nn = fct_reorder(nn, ))
ggplot(aes(x = lubridate::year(start_date), y = distance, fill = nn)) +
geom_col() +
expand_limits(y = 0) +
scale_x_continuous(breaks = scales::breaks_pretty(n = 12))
library(sf)
st_read("~/Downloads/ref-countries-2016-60m.geojson/CNTR_BN_60M_2016_3035.geojson")
library(tidyverse)
library(sf)
gdpr_violations <- readr::read_tsv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-04-21/gdpr_violations.tsv')
gdpr_text <- readr::read_tsv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-04-21/gdpr_text.tsv')
gdpr_violations %>%
count(name, type, sort = TRUE)
gdpr_violations %>%
add_count(name) %>%
filter(n >= 10) %>%
ggplot(aes(x = price)) +
geom_histogram(bins = 50) +
scale_x_log10(labels = scales::label_dollar()) +
facet_wrap(~name)
#TODO: Map EU with each country. Add information about total fine paid and total
#amount of fine
st_read("~/Downloads/ref-countries-2016-60m.geojson/CNTR_BN_60M_2016_3035.geojson") %>% ggplot() +
geom_sf()
st_read("~/Downloads/ref-countries-2016-60m.geojson/CNTR_BN_60M_2016_3035_COASTL.geojson") %>% ggplot() +
geom_sf()
st_read("~/Downloads/ref-countries-2016-60m.geojson/CNTR_BN_60M_2016_3035_INLAND.geojson.geojson") %>% ggplot() +
geom_sf()
st_read("~/Downloads/ref-countries-2016-60m.geojson/CNTR_BN_60M_2016_3035_INLAND.geojson") %>% ggplot() +
geom_sf()
st_read("~/Downloads/ref-countries-2016-60m.geojson/CNTR_BN_60M_2016_3857.geojson") %>% ggplot() +
geom_sf()
st_read("~/Downloads/ref-countries-2016-60m.geojson/CNTR_BN_60M_2016_3857_COASTL.geojson") %>%
ggplot() +
geom_sf()
st_read("~/Downloads/ref-countries-2016-60m.geojson/CNTR_BN_60M_2016_3857_INLAND.geojson") %>%
ggplot() +
geom_sf()
st_read("~/Downloads/ref-countries-2016-60m.geojson/CNTR_LB_2016_4326.geojson") %>%
ggplot() +
geom_sf()
st_read("~/Downloads/ref-countries-2016-60m.geojson/CNTR_RG_60M_2016_4326.geojson") %>%
ggplot() +
geom_sf()
st_read("~/Downloads/ref-countries-2016-60m.geojson/CNTR_RG_60M_2016_3857.geojson") %>%
ggplot() +
geom_sf()
st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_BN_60M_2016_3035.geojson") %>%
ggplot() +
geom_sf()
st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_RG_60M_2016_4326_LEVL_3.geojson") %>%
ggplot() +
geom_sf()
files <- fs::dir_ls("~/Downloads/ref-nuts-2016-60m.geojson/", glob = "*.geojson")
files
pp <- function(file) {
st_read(file) %>%
ggplot() +
geom_sf() %>%
print()
}
source('~/.active-rstudio-document', echo=TRUE)
map(files, pp)
source('~/.active-rstudio-document', echo=TRUE)
library(patchwork)
wrap_plots(ppp)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
styler:::style_active_file()
styler:::style_selection()
styler:::style_selection()
source('~/.active-rstudio-document', echo=TRUE)
p <- wrap_plots(ppp)
ggsave(p, "~/Desktop/test.pdf", device = cairo_pdf, width = 16, height = 16)
ggsave(p, "/home/filoche/Desktop/test.pdf", device = cairo_pdf, width = 16, height = 16)
class(p)
ggsave(p, "/home/filoche/Desktop/test.png", width = 16, height = 16)
ggsave("/home/filoche/Desktop/test.pdf", p, device = cairo_pdf, width = 16, height = 16)
st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_RG_60M_2016_4326_LEVL_3.geojson")
sf <- st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_RG_60M_2016_4326_LEVL_3.geojson")
sf
plot(sf)
countrycode
install.packages("countrycode")
countrycode::countrycode(sf$CNTR_CODE)
countrycode::countrycode(sf$CNTR_CODE, origin = "iso2c")
countrycode::countrycode(sf$CNTR_CODE, origin = "iso2c", destination = "iso3c")
library(countrycode)
?codelist
sf
countrycode::countrycode(sf$CNTR_CODE, origin = "iso2c", destination = "country.name")
unique(sf$CNTR_CODE)
unique(sf$NUTS_NAME)
unique(sf$NUTS_ID)
sf <- st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_RG_60M_2016_4326_LEVL_3.geojson") %>%
mutate(across(is.factor, as.character))
countrycode::countrycode(sf$CNTR_CODE, origin = "iso2c", destination = "iso3c")
codelist
enframe(codelist)
class(codelist)
codelist %>% as_tibble()
codelist %>% as_tibble() %>% view
countrycode::countrycode(sf$CNTR_CODE, origin = "fips", destination = "iso3c")
countrycode::countrycode(sf$CNTR_CODE, origin = "eurostat", destination = "iso3c")
countrycode::countrycode(sf$CNTR_CODE, origin = "eurostat", destination = "eurosta.name")
countrycode::countrycode(sf$CNTR_CODE, origin = "eurostat", destination = "eurostat.name")
sf <- st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_RG_60M_2016_4326_LEVL_3.geojson") %>%
mutate(across(is.factor, as.character)) %>%
mutate(country_name = countrycode(sf$CNTR_CODE, origin = "eurostat", destination = "eurostat.name"))
styler:::style_selection()
gdpr_violations
sf <- st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_RG_60M_2016_4326_LEVL_3.geojson") %>%
mutate(across(is.factor, as.character)) %>%
mutate(name = countrycode(sf$CNTR_CODE, origin = "eurostat", destination = "eurostat.name"))
left_join(gdpr_violations, sd)
left_join(gdpr_violations, sf)
library(tidyverse)
library(sf)
library(countrycode)
gdpr_violations <- readr::read_tsv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-04-21/gdpr_violations.tsv')
gdpr_text <- readr::read_tsv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-04-21/gdpr_text.tsv')
gdpr_violations %>%
count(name, type, sort = TRUE)
gdpr_violations %>%
add_count(name) %>%
filter(n >= 10) %>%
ggplot(aes(x = price)) +
geom_histogram(bins = 50) +
scale_x_log10(labels = scales::label_dollar()) +
facet_wrap(~name)
#TODO: Map EU with each country. Add information about total fine paid and total
#amount of fine
sf <- st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_RG_60M_2016_4326_LEVL_3.geojson") %>%
mutate(across(is.factor, as.character)) %>%
mutate(name = countrycode(sf$CNTR_CODE, origin = "eurostat", destination = "eurostat.name"))
left_join(gdpr_violations, sf)
left_join(gdpr_violations, sf, by = "name")
anti_join(gdpr_violations, sf, by = "name")
anti_join(gdpr_violations, sf, by = "name") %>% View
View(sf)
gdpr_violations
sf <- st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_RG_60M_2016_4326_LEVL_3.geojson") %>%
mutate(across(is.factor, as.character)) %>%
mutate(name = countrycode(sf$CNTR_CODE, origin = "eurostat", destination = "country.name"))
anti_join(gdpr_violations, sf, by = "name") %>% View
gdpr_violations
View(gdpr_violations)
gdpr_violations %>%
#TODO: Map EU with each country. Add information about total fine paid and total
#amount of fine
sf <- st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_RG_60M_2016_4326_LEVL_3.geojson") %>%
mutate(across(is.factor, as.character)) %>%
mutate(name = countrycode(CNTR_CODE, origin = "eurostat", destination = "country.name"))
gdpr_violations %>%
#TODO: Map EU with each country. Add information about total fine paid and total
#amount of fine
sf <- st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_RG_60M_2016_4326_LEVL_3.geojson") %>%
mutate(across(is.factor, as.character)) %>%
mutate(name = countrycode(CNTR_CODE, origin = "eurostat", destination = "country.name")) %>%
mutate(name = ifelse(name == "Czechia", "Czech Republic", name))
anti_join(gdpr_violations, sf, by = "name") %>% View
gdpr_violations %>%
#TODO: Map EU with each country. Add information about total fine paid and total
#amount of fine
sf <- st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_RG_60M_2016_4326_LEVL_3.geojson") %>%
mutate(across(is.factor, as.character)) %>%
mutate(name = countrycode(CNTR_CODE, origin = "eurostat", destination = "country.name")) %>%
mutate(name = ifelse(name == "Czechia", "Czech Republic", name))
unique(sf$name)
gdpr_violations %>%
#TODO: Map EU with each country. Add information about total fine paid and total
#amount of fine
sf <- st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_RG_60M_2016_4326_LEVL_3.geojson") %>%
mutate(across(is.factor, as.character)) %>%
mutate(name = countrycode(CNTR_CODE, origin = "eurostat", destination = "country.name")) %>%
mutate(name = ifelse(name == "Czechia", "Czech Republic", name))
sf <- st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_RG_60M_2016_4326_LEVL_3.geojson") %>%
mutate(across(is.factor, as.character)) %>%
mutate(name = countrycode(CNTR_CODE, origin = "eurostat", destination = "country.name")) %>%
mutate(name = ifelse(name == "Czechia", "Czech Republic", name))
anti_join(gdpr_violations, sf, by = "name") %>% View
left_join(gdpr_violations, sf, by = "name")
dat <- left_join(gdpr_violations, sf, by = "name")
source('/media/4TB/work-ulaval/projects/tidytuesday/R/tidytuesday_2020_week17.R', echo=TRUE)
gdpr_violations
gdpr_violations %>%
group_by(name) %>%
summarise(total_fine = sum(amoun))
gdpr_violations %>%
group_by(name) %>%
summarise(total_fine = sum(price))
gdpr_violations %>%
group_by(name) %>%
summarise(total_fine = sum(price), n_fine = n())
gdpr_violations <- gdpr_violations %>%
group_by(name) %>%
summarise(total_fine = sum(price), n_fine = n())
dat <- left_join(, sf, by = "name")
dat <- left_join(gdpr_violations, sf, by = "name")
dat <- anti_join(gdpr_violations, sf, by = "name")
dat <- full_join(gdpr_violations, sf, by = "name")
dat %>%
ggplot() +
geom_sf()
dat <- full_join(sf, gdpr_violations, by = "name")
dat %>%
ggplot() +
geom_sf()
dat %>%
ggplot() +
geom_sf(aes(fill = n))
dat %>%
ggplot() +
geom_sf(aes(fill = n_fine))
sf <- st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_RG_60M_2016_4326_LEVL_1.geojson") %>%
mutate(across(is.factor, as.character)) %>%
mutate(name = countrycode(CNTR_CODE, origin = "eurostat", destination = "country.name")) %>%
mutate(name = ifelse(name == "Czechia", "Czech Republic", name))
anti_join(gdpr_violations, sf, by = "name")
gdpr_violations <- gdpr_violations %>%
group_by(name) %>%
summarise(total_fine = sum(price), n_fine = n())
source('/media/4TB/work-ulaval/projects/tidytuesday/R/tidytuesday_2020_week17.R', echo=TRUE)
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine))
View(gdpr_violations)
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine)) +
scale_fill_viridis_b()
View(gdpr_violations)
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine)) +
scale_fill_viridis_c()
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine)) +
rcartocolor::scale_color_carto_c()
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine)) +
rcartocolor::scale_fill_carto_c()
library(ggpmthemes)
source('/media/4TB/work-ulaval/projects/tidytuesday/R/tidytuesday_2020_week17.R', echo=TRUE)
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine), size = 0.1) +
rcartocolor::scale_fill_carto_c()
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine), size = 0.1) +
rcartocolor::scale_fill_carto_c(labels = scales::label_dollar())
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine), size = 0.1) +
rcartocolor::scale_fill_carto_c(labels = scales::label_dollar(), trans = "log10")
styler:::style_selection()
styler:::style_active_file()
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine), size = 0.1) +
rcartocolor::scale_fill_carto_c(
labels = scales::label_dollar(),
trans = "log10"
)
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine), size = 0.1) +
rcartocolor::scale_fill_carto_c(
labels = scales::label_dollar(suffix = "\u20ac"),
trans = "log10"
)
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine), size = 0.1) +
rcartocolor::scale_fill_carto_c(
labels = scales::label_dollar(prefix = "\u20ac"),
trans = "log10"
)
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine), size = 0.1) +
rcartocolor::scale_fill_carto_b(
labels = scales::label_dollar(prefix = "\u20ac"),
trans = "log10"
)
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine), size = 0.1) +
rcartocolor::scale_fill_carto_d(
labels = scales::label_dollar(prefix = "\u20ac"),
trans = "log10"
)
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine), size = 0.1) +
rcartocolor::scale_fill_carto_c(
labels = scales::label_dollar(prefix = "\u20ac"),
trans = "log10"
)
styler:::style_active_file()
gdpr_violations %>%
count(name, type, sort = TRUE)
library(tidyverse)
library(sf)
library(countrycode)
library(ggpmthemes)
theme_set(theme_light_modified(base_family = "Open Sans"))
gdpr_violations <- readr::read_tsv(
"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-04-21/gdpr_violations.tsv"
)
gdpr_violations %>%
count(name, type, sort = TRUE)
sf <- st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_RG_60M_2016_4326_LEVL_1.geojson") %>%
mutate(across(is.factor, as.character)) %>%
mutate(name = countrycode(CNTR_CODE, origin = "eurostat", destination = "country.name")) %>%
mutate(name = ifelse(name == "Czechia", "Czech Republic", name))
styler:::style_active_file()
sf <- st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_RG_60M_2016_4326_LEVL_1.geojson") %>%
mutate(across(is.factor, as.character)) %>%
mutate(
name = countrycode(CNTR_CODE,
origin = "eurostat",
destination = "country.name"
)
) %>%
mutate(name = ifelse(name == "Czechia", "Czech Republic", name))
library(tidyverse)
library(sf)
library(countrycode)
library(ggpmthemes)
theme_set(theme_light_modified(base_family = "Open Sans"))
gdpr_violations <- readr::read_tsv(
"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-04-21/gdpr_violations.tsv"
)
gdpr_violations %>%
count(name, type, sort = TRUE)
# TODO: Map EU with each country. Add information about total fine paid and total
# amount of fine
sf <- st_read("~/Downloads/ref-nuts-2016-60m.geojson/NUTS_RG_60M_2016_4326_LEVL_1.geojson") %>%
mutate(across(is.factor, as.character)) %>%
mutate(
name = countrycode(CNTR_CODE,
origin = "eurostat",
destination = "country.name"
)
) %>%
mutate(name = ifelse(name == "Czechia", "Czech Republic", name))
anti_join(gdpr_violations, sf, by = "name")
gdpr_violations <- gdpr_violations %>%
group_by(name) %>%
summarise(total_fine = sum(price), n_fine = n())
dat <- full_join(sf, gdpr_violations, by = "name")
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine), size = 0.1) +
rcartocolor::scale_fill_carto_c(
labels = scales::label_dollar(prefix = "\u20ac"),
trans = "log10"
)
sf
sf %>%
group_by(name) %>%
st_union()
sf %>%
group_by(name) %>%
st_combine()
sf %>%
group_by(name) %>%
st_combine() %>%
ggplot() +
geom_sf()
sf %>%
group_by(name) %>%
st_union() %>%
ggplot() +
geom_sf()
sf %>%
group_by(name) %>%
summarise(geometry = st_union(geometry)) %>%
ggplot() +
geom_sf()
sf %>%
group_by(name) %>%
summarise(geometry = st_combine(geometry)) %>%
ggplot() +
geom_sf()
sf %>%
st_union()
sf %>%
# st_union()
group_by(name) %>%
summarise(geometry = st_union(geometry)) %>%
ggplot() +
geom_sf()
sf %>%
# st_union()
group_by(name) %>%
summarise(geometry = st_union(geometry))
sf %>%
# st_union()
group_by(name)
sf %>%
# st_union()
group_by(name) %>%
summarise(geometry = st_simplify(geometry)) %>%
ggplot() +
geom_sf()
sf %>%
# st_union()
group_by(name) %>%
summarise() %>%
ggplot() +
geom_sf()
outline <- sf %>%
group_by(name) %>%
summarise()
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine), size = 0.1) +
geom_sf(data = outline) +
rcartocolor::scale_fill_carto_c(
labels = scales::label_dollar(prefix = "\u20ac"),
trans = "log10"
)
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine), size = 0.1) +
geom_sf(data = outline, fill = "transparent") +
rcartocolor::scale_fill_carto_c(
labels = scales::label_dollar(prefix = "\u20ac"),
trans = "log10"
)
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine), size = 0.1) +
geom_sf(data = outline, fill = "transparent", color = "white") +
rcartocolor::scale_fill_carto_c(
labels = scales::label_dollar(prefix = "\u20ac"),
trans = "log10"
)
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine), size = 0.1) +
geom_sf(data = outline, fill = "transparent", color = "white") +
rcartocolor::scale_fill_carto_c(
labels = scales::label_dollar(prefix = "\u20ac"),
trans = "log10"
) +
theme(
panel.border = element_blank(),
panel.grid = element_blank()
)
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine), size = 0.1) +
geom_sf(data = outline, fill = "transparent", color = "white") +
rcartocolor::scale_fill_carto_c(
labels = scales::label_dollar(prefix = "\u20ac"),
trans = "log10"
) +
theme(
panel.border = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
dat %>%
ggplot() +
geom_sf(aes(fill = total_fine), size = 0.1) +
geom_sf(data = outline, fill = "transparent", color = "red") +
rcartocolor::scale_fill_carto_c(
labels = scales::label_dollar(prefix = "\u20ac"),
trans = "log10"
) +
theme(
panel.border = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
library(tidyverse)
library(sf)
library(countrycode)
library(ggpmthemes)
theme_set(theme_light_modified(base_family = "Open Sans"))
gdpr_violations <- readr::read_tsv(
"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-04-21/gdpr_violations.tsv"
)
gdpr_violations %>%
count(name, type, sort = TRUE)
gdpr_violations
gdpr_violations %>%
group_by(controller) %>%
summarise(sum(price))
gdpr_violations %>%
group_by(controller) %>%
summarise(p = sum(price)) %>%
arrange(desc(p))
library(gtrendsR)
gtrends(c("exports cars", "exports + cars"))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
